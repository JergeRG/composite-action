name: Deployment
on:
  push:
    branches:
      - main
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Load & cache dependencies
        id: cache-dep
        uses: ./.github/actions/cached-deps
        with:
          caching: 'false'
      - name: Output cache information
        run: echo "Cache used? ${{ steps.cache-dep.outputs.used-cache }}"
      - name: Lint code
        run: npm run lint
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Load & cache dependencies
        id: cache-dep2
        uses: ./.github/actions/cached-deps
        with:
          caching: 'true'
      - name: Output cache information
        run: echo "Cache used? ${{ steps.cache-dep2.outputs.used-cache }}"
      - name: Test code
        id: run-tests
        run: npm run test
      - name: Upload test report
        if: failure() && steps.run-tests.outcome == 'failure'
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: test.json
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Load & cache dependencies
        id: cache-dep3
        uses: ./.github/actions/cached-deps
        with:
          caching: 'true'
      - name: Output cache information
        run: echo "Cache used? ${{ steps.cache-dep3.outputs.used-cache }}"
      - name: Build website
        run: npm run build
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: dist
  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Get build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist-files
          path: ./dist
      - name: Output contents
        run: ls
      - name: Get AWS permissions
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::648805671330:role/GitHubDemo
          aws-region: us-east-1
      - name: Deploy site
        id: deploy-site
        uses: ./.github/actions/deploy-s3-docker
        with:
          bucket-name: ${{ secrets.BUCKET_NAME }}
          bucket-region: us-east-1
          dist-folder: ./dist
      - name: URL website
        run: |
          echo "Live URL: ${{ steps.deploy-site.outputs.website-url }}"
        
